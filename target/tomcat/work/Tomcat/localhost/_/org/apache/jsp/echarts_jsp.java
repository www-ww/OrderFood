/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2021-09-03 09:22:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class echarts_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\r\n");
      out.write("    <title>大学食堂外卖点餐平台</title>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"layui/jquery-1.8.3.min.js\"></script>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/layui/css/layui.css\">\r\n");
      out.write("    <link href=\"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <script src=\"https://cdn.bootcss.com/echarts/3.5.4/echarts.js\"></script>\r\n");
      out.write("    <script src=\"http://cdn.bootcss.com/jquery/1.11.1/jquery.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"layui-layout layui-layout-admin\">\r\n");
      out.write("    <div class=\"layui-header\">\r\n");
      out.write("        <div class=\"layui-logo layui-hide-xs layui-bg-black\">外卖点餐平台后台</div>\r\n");
      out.write("        <!-- 头部区域（可配合layui 已有的水平导航） -->\r\n");
      out.write("        <ul class=\"layui-nav layui-layout-left\">\r\n");
      out.write("            <!-- 移动端显示 -->\r\n");
      out.write("            <li class=\"layui-nav-item layui-show-xs-inline-block layui-hide-sm\" lay-header-event=\"menuLeft\">\r\n");
      out.write("                <i class=\"layui-icon layui-icon-spread-left\"></i>\r\n");
      out.write("            </li>\r\n");
      out.write("\r\n");
      out.write("            <li class=\"layui-nav-item layui-hide-xs\"><a href=\"/userlist.do\">用户面板</a></li>\r\n");
      out.write("            <li class=\"layui-nav-item layui-hide-xs\"><a href=\"/mafoods.do\">展示面板</a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("        <ul class=\"layui-nav layui-layout-right\">\r\n");
      out.write("            <li class=\"layui-nav-item layui-hide layui-show-md-inline-block\">\r\n");
      out.write("                <a href=\"javascript:;\">\r\n");
      out.write("                    <img src=\"//tva1.sinaimg.cn/crop.0.0.118.118.180/5db11ff4gw1e77d3nqrv8j203b03cweg.jpg\" class=\"layui-nav-img\">\r\n");
      out.write("                    admin\r\n");
      out.write("                </a>\r\n");
      out.write("                <dl class=\"layui-nav-child\">\r\n");
      out.write("                    <dd><a href=\"login.jsp\">退出登录</a></dd>\r\n");
      out.write("                </dl>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li class=\"layui-nav-item\" lay-header-event=\"menuRight\" lay-unselect>\r\n");
      out.write("                <a href=\"javascript:;\">\r\n");
      out.write("                    <i class=\"layui-icon layui-icon-more-vertical\"></i>\r\n");
      out.write("                </a>\r\n");
      out.write("            </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"layui-side layui-bg-black\">\r\n");
      out.write("        <div class=\"layui-side-scroll\">\r\n");
      out.write("            <!-- 左侧导航区域（可配合layui已有的垂直导航） -->\r\n");
      out.write("            <ul class=\"layui-nav layui-nav-tree\" lay-filter=\"test\">\r\n");
      out.write("                <li class=\"layui-nav-item layui-nav-itemed\">\r\n");
      out.write("                    <a class=\"\" href=\"/foodlist.do\">商品中心</a>\r\n");
      out.write("                    <dl class=\"layui-nav-child\">\r\n");
      out.write("                        <dd><a href=\"addfood.jsp\">添加商品</a></dd>\r\n");
      out.write("                        <dd><a href=\"/foodlist.do\">删除/修改商品</a></dd>\r\n");
      out.write("                    </dl>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"layui-nav-item layui-nav-itemed\">\r\n");
      out.write("                    <a href=\"/orderlist.do\">订单中心</a>\r\n");
      out.write("                    <dl class=\"layui-nav-child\">\r\n");
      out.write("                        <dd><a href=\"/orderlist.do\">修改订单</a></dd>\r\n");
      out.write("                        <dd><a href=\"/orderlist.do\">删除订单</a></dd>\r\n");
      out.write("                    </dl>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"layui-nav-item\"><a href=\"/userlist.do\">用户管理</a></li>\r\n");
      out.write("                <li class=\"layui-nav-item\"><a href=\"/m-comlist.do\">投诉中心</a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"layui-body\">\r\n");
      out.write("<h3>\r\n");
      out.write("    <a class=\"btn btn-primary\" href=\"/foodlist.do\" style=\"margin-left: 30px\">返回</a>\r\n");
      out.write("</h3>\r\n");
      out.write("\r\n");
      out.write("<div id=\"main\" style=\"width:1000px; height:600px;align:center;margin-left: 30px\"></div>\r\n");
      out.write("        <script type=\"text/javascript\">\r\n");
      out.write("            $(function () {\r\n");
      out.write("                // 初始化\r\n");
      out.write("                var myChart = echarts.init($('#main')[0]); // 注意：这里init方法的参数的javascript对象，使用jQuery获取标签时，要将jQuery对象转成JavaScript对象；\r\n");
      out.write("\r\n");
      out.write("                // 配置图标参数\r\n");
      out.write("                var options = {\r\n");
      out.write("                    backgroundColor: '#b4daec',//背景色\r\n");
      out.write("                    color:['#5793F3'],\r\n");
      out.write("                    title: {\r\n");
      out.write("                        text: '商品销量柱状图',\r\n");
      out.write("                        show: true, // 是否显示标题\r\n");
      out.write("                        subtext: '数据',\r\n");
      out.write("                        textStyle: {\r\n");
      out.write("                            fontSize: 18 // 标题文字大小\r\n");
      out.write("                        }\r\n");
      out.write("                    },\r\n");
      out.write("                    tooltip: {\r\n");
      out.write("                        trigger: 'axis',\r\n");
      out.write("                        axisPointer: {\r\n");
      out.write("                            type: 'shadow'\r\n");
      out.write("                        }\r\n");
      out.write("                    },\r\n");
      out.write("                    legend: {\r\n");
      out.write("                        data: ['销量']\r\n");
      out.write("                    },\r\n");
      out.write("                    // X轴\r\n");
      out.write("                    xAxis: {\r\n");
      out.write("                        data: [] // 异步请求时,这里要置空\r\n");
      out.write("                    },\r\n");
      out.write("                    // Y轴\r\n");
      out.write("                    yAxis: {},\r\n");
      out.write("                    series: [{\r\n");
      out.write("                        name: '销量',\r\n");
      out.write("                        type: 'bar', // 设置图表类型为柱状图\r\n");
      out.write("                        data: [] // 设置纵坐标的刻度(异步请求时,这里要置空)\r\n");
      out.write("                    }]\r\n");
      out.write("                };\r\n");
      out.write("                // 给图标设置配置的参数\r\n");
      out.write("                myChart.setOption(options);\r\n");
      out.write("                myChart.showLoading(); // 显示加载动画\r\n");
      out.write("// 异步请求加载数据\r\n");
      out.write("                var names = [];//类别数组（实际用来盛放x轴坐标的值）\r\n");
      out.write("                var values = []; //销量数组 （实际用来盛放y轴坐标的值）\r\n");
      out.write("                //使用异步（同步请求将会锁住浏览器，用户其他操作必须等待请求完成才可以执行）\r\n");
      out.write("                $.ajax({\r\n");
      out.write("                    type: \"get\",\r\n");
      out.write("                    url: \"/queryForList\",//请求数据的地址\r\n");
      out.write("                    dataType: \"json\", //返回数据形式为json\r\n");
      out.write("                    success: function (data) {//后台传的数据  [{\"name\":\"java\",\"value\":1038},{\"name\":\"sql\",\"value\":1700}]\r\n");
      out.write("                        if (data === '') {\r\n");
      out.write("                            alert(\"加载失败\");\r\n");
      out.write("                        } else {\r\n");
      out.write("                            //alert(\"加载成功\");\r\n");
      out.write("                            console.log(data);\r\n");
      out.write("                            //请求成功时执行该函数内容，result即为服务器返回的json对象\r\n");
      out.write("                            for (var i = 0; i < data.length; i++) {\r\n");
      out.write("                                names.push(data[i].name);//挨个取出类别并填入类别数组\r\n");
      out.write("                            }\r\n");
      out.write("                            for (var i = 0; i < data.length; i++) {\r\n");
      out.write("                                values.push(data[i].value);//挨个取出销量并填入销量数组\r\n");
      out.write("                            }\r\n");
      out.write("                            myChart.hideLoading(); //隐藏加载动画\r\n");
      out.write("                            myChart.setOption({ //加载数据图表\r\n");
      out.write("                                xAxis: {\r\n");
      out.write("                                    data: names\r\n");
      out.write("                                },\r\n");
      out.write("                                series: [{\r\n");
      out.write("                                    // 根据名字对应到相应的系列\r\n");
      out.write("                                    name: '销量',\r\n");
      out.write("                                    data: values\r\n");
      out.write("                                }]\r\n");
      out.write("                            });\r\n");
      out.write("                        }\r\n");
      out.write("                    },\r\n");
      out.write("                    error: function (XMLHttpRequest, textStatus, errorThrown) {//请求的失败的返回的方法\r\n");
      out.write("                        alert(\"出异常了\");\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("                myChart.hideLoading(); // 隐藏加载动画\r\n");
      out.write("                myChart.setOption({\r\n");
      out.write("                    legend: {\r\n");
      out.write("                        data: ['销量']\r\n");
      out.write("                    },\r\n");
      out.write("                    xAxis: {\r\n");
      out.write("                        data: names\r\n");
      out.write("                    },\r\n");
      out.write("                    series: [{\r\n");
      out.write("                        name: '商品销量',\r\n");
      out.write("                        type: 'bar', // 设置图表类型为柱状图\r\n");
      out.write("                        data: values // 设置纵坐标的刻度\r\n");
      out.write("                    }]\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("        </script>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"layui-footer\">\r\n");
      out.write("        <!-- 底部固定区域 -->\r\n");
      out.write("        Copyright © 2021.8.25 @author ww\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
